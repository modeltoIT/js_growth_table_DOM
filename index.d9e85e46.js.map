{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAK,SAAS,aAAa,CAAC,MAK9B,EAAU,EAAM,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CACjD,EAAU,EAAM,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAEjE,EAAU,gBAAgB,CAAC,QAAS,WAClC,GAAI,EAPW,GAOS,CACtB,IAAM,EAAM,EAAG,SAAS,CAAC,QAEzB,EAAM,iBAAiB,CAAC,MAAM,CAAC,EACjC,CAEA,CAAA,EAAU,EAAM,iBAAiB,CAAC,QAAQ,CAAC,MAAM,AAAN,EAd5B,GAgBW,EAAa,YAAY,CAAC,aAClD,EAAa,eAAe,CAAC,YAhBhB,KAmBX,GAAyB,EAAU,YAAY,CAAC,aAClD,EAAU,YAAY,CAAC,WAAY,WAEvC,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,EAAM,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,GAE/C,CAAA,EAAU,EAAM,iBAAiB,CAAC,QAAQ,CAAC,MAAM,AAAN,EA3B5B,IA6BW,EAAU,YAAY,CAAC,aAC/C,EAAU,eAAe,CAAC,YA/Bb,IAkCX,GAAyB,EAAa,YAAY,CAAC,aACrD,EAAa,YAAY,CAAC,WAAY,WAE1C,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EArCW,IAsCb,EAAI,EAAM,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAC,CADjD,EAEI,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAI,WAAW,CAAC,GAChB,EAAU,EAAM,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,AAC/D,GAGE,EA/CW,GA+CW,EAAgB,YAAY,CAAC,aACrD,EAAgB,eAAe,CAAC,YA/CnB,KAkDX,GAAyB,EAAa,YAAY,CAAC,aACrD,EAAa,YAAY,CAAC,WAAY,WAE1C,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACvC,EAAG,EAAM,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA9C,EACC,EAAI,gBAAgB,CAAC,MAAM,EAC7B,GAEA,CAAA,EAAU,EAAM,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,AAAN,EA5DxC,IA8DW,EAAa,YAAY,CAAC,aAClD,EAAa,eAAe,CAAC,YAhEhB,IAmEX,GAAyB,EAAgB,YAAY,CAAC,aACxD,EAAgB,YAAY,CAAC,WAAY,WAE7C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar addColumnBtn = document.querySelector(\".append-column\");\nvar removeColumnBtn = document.querySelector(\".remove-column\");\nvar addRowBtn = document.querySelector(\".append-row\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar table = document.querySelector(\".field\");\nvar tr = document.querySelector(\"tr\");\nvar MIN_ROWS = 2;\nvar MAX_ROWS = 10;\nvar MIN_COLS = 2;\nvar MAX_COLS = 10;\nvar numRows = table.firstElementChild.children.length;\nvar numCols = table.firstElementChild.children[0].children.length;\naddRowBtn.addEventListener(\"click\", function() {\n    if (numRows < MAX_ROWS) {\n        var row = tr.cloneNode(\"deep\");\n        table.firstElementChild.append(row);\n    }\n    numRows = table.firstElementChild.children.length;\n    if (numRows > MIN_ROWS && removeRowBtn.hasAttribute(\"disabled\")) removeRowBtn.removeAttribute(\"disabled\");\n    if (numRows === MAX_ROWS && !addRowBtn.hasAttribute(\"disabled\")) addRowBtn.setAttribute(\"disabled\", \"disabled\");\n});\nremoveRowBtn.addEventListener(\"click\", function() {\n    table.firstElementChild.lastElementChild.remove();\n    numRows = table.firstElementChild.children.length;\n    if (numRows < MAX_ROWS && addRowBtn.hasAttribute(\"disabled\")) addRowBtn.removeAttribute(\"disabled\");\n    if (numRows === MIN_ROWS && !removeRowBtn.hasAttribute(\"disabled\")) removeRowBtn.setAttribute(\"disabled\", \"disabled\");\n});\naddColumnBtn.addEventListener(\"click\", function() {\n    if (numCols < MAX_COLS) _to_consumable_array(table.firstElementChild.children).forEach(function(row) {\n        var td = document.createElement(\"td\");\n        row.appendChild(td);\n        numCols = table.firstElementChild.children[0].children.length;\n    });\n    if (numCols > MIN_COLS && removeColumnBtn.hasAttribute(\"disabled\")) removeColumnBtn.removeAttribute(\"disabled\");\n    if (numCols === MAX_COLS && !addColumnBtn.hasAttribute(\"disabled\")) addColumnBtn.setAttribute(\"disabled\", \"disabled\");\n});\nremoveColumnBtn.addEventListener(\"click\", function() {\n    _to_consumable_array(table.firstElementChild.children).forEach(function(row) {\n        row.lastElementChild.remove();\n    });\n    numCols = table.firstElementChild.children[0].children.length;\n    if (numCols < MAX_COLS && addColumnBtn.hasAttribute(\"disabled\")) addColumnBtn.removeAttribute(\"disabled\");\n    if (numCols === MIN_COLS && !removeColumnBtn.hasAttribute(\"disabled\")) removeColumnBtn.setAttribute(\"disabled\", \"disabled\");\n});\n\n//# sourceMappingURL=index.d9e85e46.js.map\n","'use strict';\n\nconst addColumnBtn = document.querySelector('.append-column');\nconst removeColumnBtn = document.querySelector('.remove-column');\nconst addRowBtn = document.querySelector('.append-row');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst table = document.querySelector('.field');\nconst tr = document.querySelector('tr');\nconst MIN_ROWS = 2;\nconst MAX_ROWS = 10;\nconst MIN_COLS = 2;\nconst MAX_COLS = 10;\nlet numRows = table.firstElementChild.children.length;\nlet numCols = table.firstElementChild.children[0].children.length;\n\naddRowBtn.addEventListener('click', () => {\n  if (numRows < MAX_ROWS) {\n    const row = tr.cloneNode('deep');\n\n    table.firstElementChild.append(row);\n  }\n\n  numRows = table.firstElementChild.children.length;\n\n  if (numRows > MIN_ROWS && removeRowBtn.hasAttribute('disabled')) {\n    removeRowBtn.removeAttribute('disabled');\n  }\n\n  if (numRows === MAX_ROWS && !addRowBtn.hasAttribute('disabled')) {\n    addRowBtn.setAttribute('disabled', 'disabled');\n  }\n});\n\nremoveRowBtn.addEventListener('click', () => {\n  table.firstElementChild.lastElementChild.remove();\n\n  numRows = table.firstElementChild.children.length;\n\n  if (numRows < MAX_ROWS && addRowBtn.hasAttribute('disabled')) {\n    addRowBtn.removeAttribute('disabled');\n  }\n\n  if (numRows === MIN_ROWS && !removeRowBtn.hasAttribute('disabled')) {\n    removeRowBtn.setAttribute('disabled', 'disabled');\n  }\n});\n\naddColumnBtn.addEventListener('click', () => {\n  if (numCols < MAX_COLS) {\n    [...table.firstElementChild.children].forEach((row) => {\n      const td = document.createElement('td');\n\n      row.appendChild(td);\n      numCols = table.firstElementChild.children[0].children.length;\n    });\n  }\n\n  if (numCols > MIN_COLS && removeColumnBtn.hasAttribute('disabled')) {\n    removeColumnBtn.removeAttribute('disabled');\n  }\n\n  if (numCols === MAX_COLS && !addColumnBtn.hasAttribute('disabled')) {\n    addColumnBtn.setAttribute('disabled', 'disabled');\n  }\n});\n\nremoveColumnBtn.addEventListener('click', () => {\n  [...table.firstElementChild.children].forEach((row) => {\n    row.lastElementChild.remove();\n  });\n\n  numCols = table.firstElementChild.children[0].children.length;\n\n  if (numCols < MAX_COLS && addColumnBtn.hasAttribute('disabled')) {\n    addColumnBtn.removeAttribute('disabled');\n  }\n\n  if (numCols === MIN_COLS && !removeColumnBtn.hasAttribute('disabled')) {\n    removeColumnBtn.setAttribute('disabled', 'disabled');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addColumnBtn","document","querySelector","removeColumnBtn","addRowBtn","removeRowBtn","table","tr","numRows","firstElementChild","children","numCols","addEventListener","row","cloneNode","append","hasAttribute","removeAttribute","setAttribute","lastElementChild","remove","forEach","td","createElement","appendChild"],"version":3,"file":"index.d9e85e46.js.map"}